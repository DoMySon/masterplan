Whoops, I deleted the previous todo list as well. :(

That really sucks, actually.

For the below list, INTERNAL indicates things I do for internal / non-public-facing changes to MasterPlan; this might be API changes or new features added to new features that didn't exist previously, as an example.

-- Rough Changelog --

Completed:

- Completely reworked the Undo system; should be slightly more optimized (and is simpler in the code-base, as well).
- Completely rewrote a large portion of the Task update and drawing system; may be more optimized, but it is now primarily simpler in the code-base.
- Downloading images / sounds are now multithreaded.
- Modifiers (left ctrl, right ctrl) are now left / right agnostic.
- Now only Check-box Tasks display Sub-Tasks as contributing to their own completion, not any other completable Tasks.
- Added repeatable Timers.
- Added a Daily mode for Timers (so they can trigger every Monday, Friday, etc).
- Added a Date mode for Timers (so they can trigger on a specific date).
- Added a Stopwatch mode for Timers.
- Timers now can trigger neighbors when they run out.
- Timers who are neighbors to Lines can now trigger the Tasks those Lines are pointing to, and so on.
- Added a Rectangle tool for Map Tasks.
- Themes are now global instead of per-Project.
- Qutting MasterPlan by pressing the window's [X] now prompts for a quit.
- MasterPlan now always confirms when quitting, not just when the current project has been modified.
- Added an optional border around the window (specifically for borderless mode if you want a bit more flavor).
- Added shadows for UI elements.
- Added a keyboard shortcut to quit MasterPlan (Ctrl+Q, by default).
- Map Task type background has been slightly improved, is now a bit transparent.
- Various minor visual tweaks and smaller bug-fixes.
- INTERNAL: Added a little darkness underneath the header for Maps.
- INTERNAL: Added remaining content types.
- FIX: Drawing on Whiteboards is no longer chunkier than intended (the resolution isn't unnecessarily higher).
- INTERNAL: Get rid of data race possibility for GIF loading.
- Added shortcuts to teleport you to each end of a line, in sequence.
- The splash screen no longer takes nearly as long as it previously did to disappear. (~2.5 seconds -> ~0.75 seconds)
- INTERNAL: Added relevant shortcuts for each kind of Task.
- Adding shortcuts for incrementing and decrementing Progression Tasks.
- Triggering Checkbox Tasks that have SubTasks will now trigger those SubTasks.
- FIX?: Incrementing a Progression Task's current value no longer increases the maximum if they're the same.
- Timers no longer pause or reset when adjusting their values.
- INTERNAL: Next and Previous Line Ending's shortcuts are now the C and X keys by default.
- INTERNAL: Moving Project.Shortcuts() call above Board.Update() and Board.Draw() so that shortcut clashes can properly be resolved prior to Tasks' contents being updated or drawn.
- INTERNAL: Timers should be able to be set for multiple days of the week, not just one.
- Added basic support for non-latin character entry. Note that you have to specify a font that has the characters you're entering (as the default one only has latin characters).
- INTERNAL: Made sure the binding for stopping all sounds works.
- INTERNAL: Added a new ImmediateIconButton function specifically for MultiButtonGroups
- INTERNAL: Re-implement completable task-specific deadlines
- Table Task Type - A grid of checkboxes you can click to toggle them, with customizeable hide-able headers on the left and top or bottom and right indicating names.
- INTERNAL: Fixed Task Completion Date.
- FIX: It's no longer possible to undo a project that has just been loaded.
- The grid dot background is now slightly transparent.
- INTERNAL: Add option for writing text normally, but vertically for columns for Tables.

To-do:

- Adding a new task no longer moves the entire stack below it??? Check deleting, too. (Board.DeleteSelectedTasks() no longer moves Tasks up)
- Dragging a task over a stack should attempt to insert it - might also be acceptable to simply make the keyboard shortcut to slide Tasks do this
- Fix task swapping not undoing properly (an UndoState needs to be generated for all Tasks affected by the swap)
- INTERNAL: Fix up missing project logging for Task Contents when stuff happens
- Use Lines to connect Tasks for SubTask counting
- Add rebindable shortcuts for window-related features in main.go (window size setting, fullscreen, etc)
- Hide grid at far zoom levels
- Loading images should be set to a reasonable, manageable size (maybe 50% of the zoom level)

REVIEW

- INTERNAL: Test project saving and loading - seems like there's some kind of crash that happens sometimes when loading? Might be good to spam LoadProject() to track it down
- Move "Don't open at start" checkbox somewhere else, it being in About is kind of counter-intuitive
- INTERNAL: Help Manual is really slow for some reason
- INTERNAL: Project.Modified is set directly after loading a project for some reason
- Test Timers going off
- Review and re-implement PasteContents()
- Review and re-implement HandleDroppedFiles()

- Panels should be resizeable
- FIX: Enter creates a newline, but not always? Sometimes after creating a new Task and then changing its type, it doesn't work...?
- Make an option in the Task to reset image size (it's not done often enough to make it necessary to be on the Task itself, I think)
- Add manual typing entry for month / day / year for deadlines / Timer Dates
    - Add option for MM/DD/YYYY, DD/MM/YYYY, YYYY/MM/DD
- Whiteboards aren't loading correctly (maybe just from older versions of MP)
- Lines are drawing underneath Tasks (this could be configurable)

---- RELEASE

- Optimize Table text size checks
- Move Board.CopyBuffer outside to a global variable so that it's possible to copy and paste between projects
- Table: Option to make coumn and row names invisible (so that you could for example put images there).
- Table: Add button to turn a column into a row, or vice-versa
- Add button on the Task itself to check off Checkbox Tasks
- Add tags of some description
- Add icons for task types in Task Edit Panel
- Fix up horizontal alignments in Panels - rather than doing this via RowItem.Weight or HorizontalAlignment, it would be good to have a manual spacing value that indicates how far out from an item another is (how much space is between one item and the following one)
- Changing font size shouldn't take so long - This could be simplified by making a selection for how many glyphs to load
- Consolidate the Tasks that consist of Contents and Data Structures (somehow)
- Maybe a "Zone" type to "count" Tasks that exist within it for completion? Could be simpler than wiring a lot of Lines.
- Add seek option for Sounds - maybe they should be vertically two spaces tall? Maybe they should be able to EXPAND :O?
- Downloading images / sounds should be able to be saved to a local directory per-project (?)
- Tab focusing (pressing tab focuses on different, consecutive elements in a panel)
- Deadline write-up by BiRD: https://discordapp.com/channels/339550825154347008/758009278756946040/810779087449751593
    The summary is:
        - Use timers for timing and calendars for deadlines. Calendars are:
            - Visually focused (no extraneous information)
            - Intuitive (click a day = set the day)
            - Efficient (fewer actions to do the same thing)
            - Improvable (as a result of more available screen space)
            - Reusable (calendars can be used for more than just setting deadlines)
            - Fun (not sure what to write for this one)

- Timers should be able to retroactively trigger if a set time was passed (somehow)
- Task streaks (not sure exactly how this will work; maybe you can turn it on, and it will reset if a day passes between the previous time it was completed and the current day?)
- Mini-map of some description?
- Clickable images - when you click them, they go to a location.
- Replace Board.UndoHistory with a project-level one
- Go over the tutorial to explain things a bit more; right click to open the menu should be mentioned right at launch
- Undo + Redo for textboxes
- Pasting the contents of a clipboard after directly copying a file prints some illegible characters which also mess up the textbox?
- Add ability to delete shortcuts?
- Vertical alignment isn't really centered for textboxes?
- Display full Task text on hover
- Use URL Parsing to allow parsing text to point to other Tasks / Boards (boards are just Tasks on other Boards), or Projects so you can jump there with a click
- Similarly, extend parsing to parse text to become clickable links to be able to open files or directories
- Hide status bar elements except for the search bar if there isn't enough room horizontally
- Moveable status bar
- Searchable shortcuts
- Consolidate image and sounds into one task type?
- Review libraries to see if the licenses are compatible with my own chosen license

- Export Plan to text file somehow? 
    Checkboxes become: [ ] / [x] - TASK TEXT
    Progression becomes: [12/24] - TASK TEXT
    Notes become: NOTE: - TASK TEXT
    Timers become: DUE (X DATE) - TIMER NAME

	All other Tasks are not converted.
- Graph view that allows you to see your plan as a visual "node graph"? 
    See Nuclino: https://www.nuclino.com - It says it allows you to work in Boards and Graphs, 
    so maybe the Nodes on the Graphs should be clickable to reveal more information / reveal 
    the Task on the Board
- Smooth out panel scrolling according to texture coords?       
- Consolidate logging messages so messages that are the same get "compounded". For example:

00:00:00: "Selected 1 Tasks."
00:00:00: "Selected 1 Tasks."

becomes

00:00:00: "Selected 2 Tasks."

- Improve search functionalities - present a list of Tasks that fulfill a set of 

- Add other unicode characters to default font (←№⎢¡°ᚃ√⇒∄±∑∌≠αβχδεφγηιϑΧΔΦΓ)
- Whiteboard resolution could be increased
- Replace Board-level Undo with Project-level Undo, focus on Tasks when undoing or redoing
- Clicking in the window when the window wasn't focused should be discarded
- Display size for Tasks should be dependant on maximum theoretical feasible size (for example, a Progression Task should have a maximum size that 
includes a current number and maximum number of 999 each, so that they don't change size when incrementing or decrementing)
- Password protection
- Copying tasks between Projects
- Rotating and mirroring images
- Optional compression of project JSON (it doesn't need to be readable if compressed) - a quick idea while still keeping it in plain text JSON format is to reduce the length of the strings I use to refer to Task elements, and turn off pretty printing before serialization to remove excess tab and return characters.
- GIF Playback speed should be customizeable?
- GIF step next frame / prev. frame
- Make it so that it's easier to insert Tasks (i.e. dragging tasks into a list of them will automatically space them to make room)
- Review ImmediateButton; lots of functions for what is effectively just one "thing".
- Custom Justification for Task text
- Custom prefix
- Custom numbering system enabling for tasks
- Option to indent Text with icons off
- Resizeable Notes / Collapsible Notes
- Time estimations per Task - these can be set as a project-level default (i.e. something like 30 minutes per-Task), and then further specified (maybe specifying something like 3 hours for a specific Task, as an example).
- Background hint text for text entry (i.e. "Enter date in MM/DD/YYYY Format" behind something that allows you to enter a date)
- Multitask Editing
- Hover hints (i.e. hovering over certain elements will display a message relevant to the element you're hovering over). It would be nice if they had some visuals as well to assist with explanation (like screenshots).
- Hover over Tasks to display more information about them.

Long-term Goals

- Collaboration - Real quick idea: 
    - Clone the plan to all connected users' computers.
    - One person is host and the others are guests. This is mostly for internal purposes, the actual implementation shouldn't really make a huge distinction here.
    - Show each user's (colored / numbered, like P1, P2, etc., haha) mouse cursor on your screen.
    - Each Task can only be edited by one person at a time.
    - When a Task is changed (i.e. an UndoState is generated), send the updated version of the Task over the network to the other connected users.
    - Periodically, the host sends the entire serialized Project to all connected users for syncing.
    - Test ping to each person and suggest a host based on that.
    - Connection should be able to be done from within MasterPlan.
        - Through IP addresses. This could be simplified into some sort of simple alphabet-based code?
        - Perhaps through straight up some sort of code system so that you can easily join other "planners". It'd be interesting to join random "games", though 
        this would open up the possiblity of using MasterPlan for illegal or otherwise horrible activities, so this is probably not feasible.
    - Sending data should be UDP. Data could probably be compressed in some way so as not to send actual string data.

- Git integration (git messages can refer to Task IDs to automatically complete them)
- GUI Scaling
- Video streaming (i.e. from YouTube / Vimeo)
- Music streaming (i.e. from Spotify / SoundCloud (not sure if this is feasible, but I'd like to do it))
- Internationalization and translation to other common languages
- Charts and data visualization